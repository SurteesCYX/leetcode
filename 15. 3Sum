#重点是如何找出含有一样的数的数组


class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
     List<List<Integer>> result = new LinkedList<>();
     Arrays.sort(nums);
        for (int i=0;i<nums.length-2;i++){
          int low=i+1;
          int high=nums.length-1;
          int sum=0-nums[i];
          if(i>0 && nums[i]==nums[i-1]){continue;}
          while(low<high){
             if(nums[low]+nums[high]==sum){
                result.add(new LinkedList<>(Arrays.asList(nums[i],nums[low],nums[high])));
                 while(low<high && nums[low]==nums[low+1]){low++;}####一定要用while，因为你这个数可能重复N次，不可能就重复两回
                 while(low <high && nums[high]==nums[high-1]){high--;}
                 low++;
                 high--;
             }else
            if(nums[low]+nums[high]<sum){low++;}
            else{high--;}}
      }
        return result;
}
}

#https://www.youtube.com/watch?v=mNzUMPBiRX4
#Runtime: 32 ms, faster than 83.48% of Java online submissions for 3Sum.
Memory Usage: 44.6 MB, less than 99.38% of Java online submissions for 3Sum.
Next challenges:
